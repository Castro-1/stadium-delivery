# Archivo: docker-compose.yml
version: '3'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_INVENTORY_API_URL=http://localhost:8081/api
      - REACT_APP_ORDER_API_URL=http://localhost:8082/api
      - REACT_APP_NOTIFICATION_API_URL=http://localhost:8083/api
      - REACT_APP_SOCKET_URL=http://localhost:8083
    depends_on:
      - inventory-service
      - order-service
      - notification-service

  inventory-service:
    build: ./inventory-service
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - MONGODB_URI=mongodb://mongodb:27017/stadium-inventory
    depends_on:
      - mongodb

  order-service:
    build: ./order-service
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=stadium-orders
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KAFKA_BROKER=kafka:9092
      - INVENTORY_SERVICE_URL=http://inventory-service:8081
    depends_on:
      - postgres
      - kafka
      - inventory-service

  notification-service:
    build: ./notification-service
    ports:
      - "8083:8083"
    environment:
      - PORT=8083
      - MONGODB_URI=mongodb://mongodb:27017/stadium-notifications
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongodb
      - kafka

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=stadium-orders
    volumes:
      - postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

volumes:
  mongodb-data:
  postgres-data: