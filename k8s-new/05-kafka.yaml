apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: stadium-delivery
spec:
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: bitnami/zookeeper:latest
          ports:
            - containerPort: 2181
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: stadium-delivery
spec:
  ports:
    - port: 2181
      targetPort: 2181
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: stadium-delivery
spec:
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:3.4.0
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9092"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CFG_NODE_ID
              value: "1"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "1@kafka:9093"
            - name: BITNAMI_DEBUG
              value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: stadium-delivery
spec:
  ports:
    - port: 9092
      targetPort: 9092
      name: client
    - port: 9093
      targetPort: 9093
      name: controller
  selector:
    app: kafka
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-setup
  namespace: stadium-delivery
spec:
  template:
    spec:
      containers:
        - name: kafka-setup
          image: bitnami/kafka:3.4.0
          command:
            - sh
            - -c
            - |
              echo "Waiting for Kafka to be ready..."
              sleep 45
              kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic order-events --partitions 1 --replication-factor 1
              echo "Successfully created topics"
      restartPolicy: Never
  backoffLimit: 5
